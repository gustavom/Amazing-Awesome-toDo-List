// clear fix
@mixin cf() {
    &:before,
    &:after {
        content: " ";
        display: table;
    }
    &:after {
        clear: both;
    }
    & {
        *zoom: 1;
    }
}

// vertical align
@mixin vtal() {
    position: relative;
    top: 50%;
    -webkit-transform: translateY(-50%);
    -ms-transform: translateY(-50%);
    transform: translateY(-50%);
}


//Media Queries
$breakpoints_jornal: ( "dw": $desktop-wide, "dn": $desktop-normal, "tw": $tablet-wide, "tn": $tablet-normal, "sw": $smartphone-wide, "sn": $smartphone-normal, );
@mixin mq($width, $type: max) {
    @if map_has_key($breakpoints_jornal, $width) {
        $width: map_get($breakpoints_jornal, $width);
        //@if $type == max {
        //    $width: $width - 1px;
        //}
        @media only screen and (#{$type}-width: $width) {
            @content;
        }
    }
    @else {
        @media only screen and (max-width: $width) {
            @content;
        }
    }
}

@mixin mqrange($breakpointsMin, $breakpointsMax) {
    @if map_has_key($breakpoints_jornal, $breakpointsMin) {
        $breakpointsMin: map_get($breakpoints_jornal, $breakpointsMin);
        $breakpointsMax: map_get($breakpoints_jornal, $breakpointsMax);
        @media only screen and (min-width: $breakpointsMin) and (max-width: $breakpointsMax) {
            @content;
        }
    }
    @else {
        @media only screen and (min-width: $breakpointsMin) and (max-width: $breakpointsMax) {
            @content;
        }
    }
}